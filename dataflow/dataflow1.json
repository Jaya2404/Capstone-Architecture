{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "MergedParts",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "MergedInvoice",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "UseCase1",
						"type": "DatasetReference"
					},
					"name": "UseCase1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EngineModel as string,",
				"          {LCF Part} as string,",
				"          SalesOrderNumber as string,",
				"          ModuleType as string,",
				"          MaterialInstalled as string,",
				"          MaterialDescription as string,",
				"          UnitPrice as string,",
				"          Quantity as string,",
				"          FinalPrice as string,",
				"          ExtendedList as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          EngineModel as string,",
				"          SalesOrderNumber as string,",
				"          PrimaryWorkscope as string,",
				"          SecondaryWorkscope as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2",
				"source1, source2 join(source1@EngineModel == source2@EngineModel",
				"     && source1@SalesOrderNumber == source2@SalesOrderNumber,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          EngineModel as string,",
				"          {LCF Part} as string,",
				"          SalesOrderNumber as string,",
				"          ModuleType as string,",
				"          MaterialInstalled as string,",
				"          MaterialDescription as string,",
				"          UnitPrice as string,",
				"          Quantity as string,",
				"          FinalPrice as string,",
				"          ExtendedList as string,",
				"          {LCF Parts} as string,",
				"          PrimaryWorkscope as string,",
				"          SecondaryWorkscope as string",
				"     ),",
				"     partitionFileNames:['UseCase1'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> UseCase1"
			]
		}
	}
}