{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Parts_DOF",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "NewTest",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "UseCase1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          PartDetailsId as string,",
				"          EngineModel as string,",
				"          Plant as string,",
				"          SalesOrderNumber as string,",
				"          InvoiceDate as string,",
				"          InvoiceMonth as string,",
				"          InvoiceYear as string,",
				"          EndCustomerARCode as string,",
				"          EndCustomerName as string,",
				"          PayerARCode as string,",
				"          PayerName as string,",
				"          EngineModule as string,",
				"          InvoiceRecordType as string,",
				"          MaterialInstalled as string,",
				"          MaterialDescription as string,",
				"          MaterialGroup as string,",
				"          PartRemovalReason as string,",
				"          IWBEnginePosition as string,",
				"          MajorParts as string,",
				"          PricingMonth as string,",
				"          UnitPrice as string,",
				"          Quantity as string,",
				"          TotalInvoicePriceEscalatedAtPPHRateOrDiscount as string,",
				"          ExtendedList as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          InvoiceFrontPageId as string,",
				"          EngineModel as string,",
				"          SalesOrderNumber as string,",
				"          OtherDocuments as string,",
				"          SDPlant as string,",
				"          PricingDate as string,",
				"          PrimaryModuleType as string,",
				"          PrimaryModule2Type as string,",
				"          SecondaryModuleType as string,",
				"          PrimaryModuleSerialNumber as string,",
				"          PrimaryModule2SerialNumber as string,",
				"          SecondaryModuleSerialNumber as string,",
				"          ReasonForRemovalBW as string,",
				"          ReasonForRemovalAdditionalInfo as string,",
				"          ShopEventDate as string,",
				"          ShippedDate as string,",
				"          InvoiceDate as string,",
				"          InvoiceMonth as string,",
				"          InvoiceNumber as string,",
				"          ShipToCountry as string,",
				"          EndCustomer as string,",
				"          GeographicRegionOfEndCustomer as string,",
				"          PayerAorB as string,",
				"          PrimaryModuleWorkscope as string,",
				"          PrimaryModule2Workscope as string,",
				"          SecondaryModuleWorkscope as string,",
				"          PrimaryModuleTSN as string,",
				"          PrimaryModuleCSN as string,",
				"          PrimaryModuleTSO as string,",
				"          PrimaryModuleCSO as string,",
				"          PrimaryModuleTSHSI as string,",
				"          PrimaryModuleTSLV as string,",
				"          PrimaryModule2TSN as string,",
				"          PrimaryModule2CSN as string,",
				"          PrimaryModule2TSO as string,",
				"          PrimaryModule2CSO as string,",
				"          PrimaryModule2TSHSI as string,",
				"          PrimaryModule2TSLV as string,",
				"          SecondaryModuleTSN as string,",
				"          SecondaryModuleCSN as string,",
				"          SecondaryModuleTSO as string,",
				"          SecondaryModuleCSO as string,",
				"          SecondaryModuleTSHSI as string,",
				"          SecondaryModuleTSLV as string,",
				"          PrimaryModuleWorkscopeFinal as string,",
				"          PrimaryModule2WorkscopeFinal as string,",
				"          SecondaryModuleWorkscopeFinal as string,",
				"          HSICategory as string,",
				"          TargetHSIInterval as string,",
				"          PrimaryModuleOVHCategory as string,",
				"          PrimaryModuleTargetTBO as string,",
				"          PrimaryModule2OVHCategory as string,",
				"          PrimaryModule2TargetTBO as string,",
				"          SecondaryModuleOVHCategory as string,",
				"          SecondaryModuleTargetTBO as string,",
				"          PreviousEventHistory as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2",
				"source1, source2 join(source1@SalesOrderNumber == source2@SalesOrderNumber",
				"     && source1@EngineModel == source2@EngineModel,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}