{
	"name": "MergedParts_UseCase3",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Parts_DOF",
						"type": "DatasetReference"
					},
					"name": "DOF"
				},
				{
					"dataset": {
						"referenceName": "Parts_PW1XX",
						"type": "DatasetReference"
					},
					"name": "PW1XX"
				},
				{
					"dataset": {
						"referenceName": "Parts_PW127",
						"type": "DatasetReference"
					},
					"name": "PW127"
				},
				{
					"dataset": {
						"referenceName": "Parts_PW150",
						"type": "DatasetReference"
					},
					"name": "PW150"
				},
				{
					"dataset": {
						"referenceName": "Parts_TFAN",
						"type": "DatasetReference"
					},
					"name": "TFAN"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Parquet2",
						"type": "DatasetReference"
					},
					"name": "MergedPartsUseCase3"
				}
			],
			"transformations": [
				{
					"name": "union1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          PartDetailsId as integer,",
				"          EngineModel as string,",
				"          SalesOrderNumber as short,",
				"          Plant as string,",
				"          InvoiceDate as timestamp,",
				"          InvoiceMonth as short,",
				"          InvoiceYear as short,",
				"          EndCustomerARCode as string,",
				"          EndCustomerName as string,",
				"          PayerARCode as string,",
				"          PayerName as string,",
				"          EngineModule as string,",
				"          InvoiceRecordType as string,",
				"          MaterialInstalled as short,",
				"          MaterialDescription as string,",
				"          MaterialGroup as string,",
				"          PartRemovalReason as string,",
				"          IWBEnginePosition as short,",
				"          MajorParts as string,",
				"          PricingMonth as short,",
				"          UnitPrice as integer,",
				"          Quantity as short,",
				"          TotalInvoicePriceEscalatedAtPPHRateOrDiscount as double,",
				"          ExtendedList as integer",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: true,",
				"     ignoreNoFilesFound: false) ~> DOF",
				"source(output(",
				"          PartDetailsId as integer,",
				"          EngineModel as string,",
				"          SalesOrderNumber as integer,",
				"          Plant as string,",
				"          InvoiceNumber as integer,",
				"          InvoiceDate as timestamp,",
				"          InvoiceMonth as short,",
				"          InvoiceYear as short,",
				"          EndCustomerARCode as integer,",
				"          EndCustomer as string,",
				"          PayerARCode as integer,",
				"          PayerName as string,",
				"          EngineModule as string,",
				"          InvoiceRecordType as string,",
				"          MaterialInstalled as short,",
				"          MaterialDescription as string,",
				"          MaterialGroup as string,",
				"          PartRemovalReason as string,",
				"          IWBEnginePosition as short,",
				"          MajorParts as string,",
				"          PricingMonth as short,",
				"          UnitPrice as integer,",
				"          Quantity as short,",
				"          ExtendedList as integer,",
				"          TotalInvoicePriceEscalatedAtPPHRateOrDiscount as double",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> PW1XX",
				"source(output(",
				"          PartDetailsId as integer,",
				"          EngineModel as string,",
				"          SalesOrderNumber as integer,",
				"          Plant as string,",
				"          InvoiceNumber as integer,",
				"          InvoiceDate as timestamp,",
				"          InvoiceMonth as short,",
				"          InvoiceYear as short,",
				"          EndCustomerARCode as integer,",
				"          EndCustomerName as string,",
				"          {EndCustomerARCode.1} as integer,",
				"          PayerName as string,",
				"          EngineModule as string,",
				"          InvoiceRecordType as string,",
				"          MaterialInstalled as short,",
				"          MaterialDescription as string,",
				"          MaterialGroup as string,",
				"          PartRemovalReason as string,",
				"          IWBEnginePosition as short,",
				"          MajorParts as string,",
				"          PricingMonth as short,",
				"          UnitPrice as integer,",
				"          Quantity as short,",
				"          TotalInvoicePriceEscalatedAtPPHRateOrDiscount as double,",
				"          ExtendedList as integer",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> PW127",
				"source(output(",
				"          PartDetailsId as integer,",
				"          EngineModel as string,",
				"          SalesOrderNumber as integer,",
				"          Plant as string,",
				"          InvoiceNumber as integer,",
				"          InvoiceDate as timestamp,",
				"          InvoiceMonth as short,",
				"          InvoiceYear as short,",
				"          EndCustomerARCode as integer,",
				"          EndCustomerName as string,",
				"          PayerARCode as integer,",
				"          PayerName as string,",
				"          EngineModule as string,",
				"          InvoiceRecordType as string,",
				"          MaterialInstalled as short,",
				"          MaterialDescription as string,",
				"          MaterialGroup as string,",
				"          PartRemovalReason as string,",
				"          IWBEnginePosition as short,",
				"          MajorParts as string,",
				"          PricingMonth as short,",
				"          UnitPrice as integer,",
				"          Quantity as short,",
				"          TotalInvoicePriceEscalatedAtPPHRateOrDiscount as double,",
				"          ExtendedList as integer",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> PW150",
				"source(output(",
				"          PartDetailsId as integer,",
				"          EngineModel as string,",
				"          SalesOrderNumber as integer,",
				"          Plant as string,",
				"          InvoiceNumber as integer,",
				"          InvoiceDate as timestamp,",
				"          InvoiceMonth as short,",
				"          InvoiceYear as short,",
				"          EndCustomerARCode as integer,",
				"          EndCustomer as string,",
				"          PayerARCode as integer,",
				"          PayerName as string,",
				"          EngineModule as string,",
				"          InvoiceRecordType as string,",
				"          MaterialInstalled as short,",
				"          MaterialDescription as string,",
				"          MaterialGroup as string,",
				"          PartRemovalReason as string,",
				"          IWBEnginePosition as short,",
				"          MajorParts as string,",
				"          PricingMonth as short,",
				"          UnitPrice as integer,",
				"          Quantity as short,",
				"          TotalInvoicePriceEscalatedAtPPHRateOrDiscount as double,",
				"          ExtendedList as integer",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> TFAN",
				"DOF, PW1XX, TFAN, PW150, PW127 union(byName: true,",
				"     partitionBy('hash', 1))~> union1",
				"union1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          InvoiceFrontPageId as string,",
				"          EngineModel as string,",
				"          SalesOrderNumber as string,",
				"          OtherDocuments as string,",
				"          SDPlant as string,",
				"          PricingDate as date,",
				"          PrimaryModuleType as string,",
				"          PrimaryModule2Type as string,",
				"          SecondaryModuleType as string,",
				"          PrimaryModuleSerialNumber as string,",
				"          PrimaryModule2SerialNumber as string,",
				"          SecondaryModuleSerialNumber as string,",
				"          ReasonForRemovalBW as string,",
				"          ReasonForRemovalAdditionalInfo as string,",
				"          ShopEventDate as date,",
				"          ShippedDate as date,",
				"          InvoiceDate as date,",
				"          InvoiceMonth as string,",
				"          InvoiceNumber as string,",
				"          ShipToCountry as string,",
				"          EndCustomer as string,",
				"          GeographicRegionOfEndCustomer as string,",
				"          PayerAorB as string,",
				"          PrimaryModuleWorkscope as string,",
				"          PrimaryModule2Workscope as string,",
				"          SecondaryModuleWorkscope as string,",
				"          PrimaryModuleTSN as double,",
				"          PrimaryModuleCSN as double,",
				"          PrimaryModuleTSO as double,",
				"          PrimaryModuleCSO as double,",
				"          PrimaryModuleTSHSI as double,",
				"          PrimaryModuleTSLV as double,",
				"          PrimaryModule2TSN as double,",
				"          PrimaryModule2CSN as double,",
				"          PrimaryModule2TSO as double,",
				"          PrimaryModule2CSO as double,",
				"          PrimaryModule2TSHSI as double,",
				"          PrimaryModule2TSLV as double,",
				"          SecondaryModuleTSN as double,",
				"          SecondaryModuleCSN as double,",
				"          SecondaryModuleTSO as double,",
				"          SecondaryModuleCSO as double,",
				"          SecondaryModuleTSHSI as double,",
				"          SecondaryModuleTSLV as double,",
				"          PrimaryModuleWorkscopeFinal as string,",
				"          PrimaryModule2WorkscopeFinal as string,",
				"          SecondaryModuleWorkscopeFinal as string,",
				"          HSICategory as string,",
				"          TargetHSIInterval as double,",
				"          PrimaryModuleOVHCategory as string,",
				"          PrimaryModuleTargetTBO as double,",
				"          PrimaryModule2OVHCategory as double,",
				"          PrimaryModule2TargetTBO as double,",
				"          SecondaryModuleOVHCategory as string,",
				"          SecondaryModuleTargetTBO as double,",
				"          PreviousEventHistory as string",
				"     ),",
				"     format: 'parquet',",
				"     partitionFileNames:['MergedParts_UseCase3'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> MergedPartsUseCase3"
			]
		}
	}
}